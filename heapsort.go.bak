package main

import "fmt"

func main() {
	s := []int{7, 9, 14, 16, 3, 2, 10, 4, 1, 8}
	len := len(s)/2 - 1
	var sorted = make([]int, len, len*2+1)
	for i := len; i >= 0; i-- {
		sorted = heapify(s, i, 2*i+1, 2*i+2)
	}
	fmt.Println(sorted)
}

func heapify(s []int, root, left, right int) []int {
	var largest, tmp int
	if s[root] > s[left] && s[root] > s[right] {
		largest = root
	}
	if largest == root {
		return s
	}

	if s[root] < s[left] {
		largest = left
	} else if right < len(s) && s[root] < s[right] && s[left] < s[right] {
		largest = right
	}

	if largest != 0 {
		tmp = s[largest]
		s[largest] = s[root]
		s[root] = tmp
		//if root == 0 {
		//	return s
		//}
		fmt.Println(s)
		heapify(s, largest, 2*largest+1, 2*largest+2)
	}
	return s
}
